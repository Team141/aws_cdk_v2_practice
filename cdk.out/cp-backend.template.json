{
 "Resources": {
  "buildprojectRoleB4D7D8AB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/buildproject/Role/Resource"
   }
  },
  "buildprojectRoleDefaultPolicyA8DD865E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::ImportValue": "build-artifacts-bucket"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::ImportValue": "build-artifacts-bucket"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "buildproject87EEBE72"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "buildproject87EEBE72"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "buildproject87EEBE72"
          },
          "-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "buildprojectRoleDefaultPolicyA8DD865E",
    "Roles": [
     {
      "Ref": "buildprojectRoleB4D7D8AB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/buildproject/Role/DefaultPolicy/Resource"
   }
  },
  "buildproject87EEBE72": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "ENV",
       "Type": "PLAINTEXT",
       "Value": "dev"
      },
      {
       "Name": "PRJ",
       "Type": "PLAINTEXT",
       "Value": "severless"
      },
      {
       "Name": "STAGE",
       "Type": "PLAINTEXT",
       "Value": "dev"
      }
     ],
     "Image": "aws/codebuild/standard:3.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "buildprojectRoleB4D7D8AB",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"echo \\\"--INSTALL PHASE--\\\"\",\n        \"npm install --silent --no-progress serverless -g\"\n      ]\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"echo \\\"--PRE BUILD PHASE--\\\"\",\n        \"npm install --silent --no-progress\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"echo \\\"--BUILD PHASE--\\\"\",\n        \"serverless deploy -s $STAGE\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"**/*\"\n    ],\n    \"base-directory\": \".serverless\"\n  }\n}",
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Location": {
      "Fn::Join": [
       "/",
       [
        {
         "Fn::ImportValue": "build-artifacts-bucket"
        },
        "codebuild-cache"
       ]
      ]
     },
     "Type": "S3"
    },
    "Description": "package lambda functions",
    "EncryptionKey": "alias/aws/s3",
    "Name": "dev-severless-build-project"
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/buildproject/Resource"
   }
  },
  "backendpipelineRole59DF2843": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Role/Resource"
   }
  },
  "backendpipelineRoleDefaultPolicyAF6F9348": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::ImportValue": "build-artifacts-bucket"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::ImportValue": "build-artifacts-bucket"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "backendpipelineDeployDeploytoDevCodePipelineActionRoleAD541078",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "backendpipelineRoleDefaultPolicyAF6F9348",
    "Roles": [
     {
      "Ref": "backendpipelineRole59DF2843"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "backendpipelineDB62E984": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "backendpipelineRole59DF2843",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "Team141",
         "Repo": "udemy_aws_cdk_code",
         "Branch": "main",
         "OAuthToken": "{{resolve:secretsmanager:dev/github-token:SecretString:github-token::}}",
         "PollForSourceChanges": false
        },
        "Name": "GitHubSource",
        "OutputArtifacts": [
         {
          "Name": "source"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "buildproject87EEBE72"
         }
        },
        "InputArtifacts": [
         {
          "Name": "source"
         }
        ],
        "Name": "DeploytoDev",
        "OutputArtifacts": [
         {
          "Name": "build"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "backendpipelineDeployDeploytoDevCodePipelineActionRoleAD541078",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Deploy"
     }
    ],
    "ArtifactStore": {
     "Location": {
      "Fn::ImportValue": "build-artifacts-bucket"
     },
     "Type": "S3"
    },
    "Name": "dev-severless-backend-pipeline",
    "RestartExecutionOnUpdate": false
   },
   "DependsOn": [
    "backendpipelineRoleDefaultPolicyAF6F9348",
    "backendpipelineRole59DF2843"
   ],
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Resource"
   }
  },
  "backendpipelineSourceGitHubSourceWebhookResourceC780C728": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:dev/github-token:SecretString:github-token::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "TargetAction": "GitHubSource",
    "TargetPipeline": {
     "Ref": "backendpipelineDB62E984"
    },
    "TargetPipelineVersion": 1,
    "RegisterWithThirdParty": true
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Source/GitHubSource/WebhookResource"
   }
  },
  "backendpipelineDeployDeploytoDevCodePipelineActionRoleAD541078": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Deploy/DeploytoDev/CodePipelineActionRole/Resource"
   }
  },
  "backendpipelineDeployDeploytoDevCodePipelineActionRoleDefaultPolicyAC5B918E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "buildproject87EEBE72",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "backendpipelineDeployDeploytoDevCodePipelineActionRoleDefaultPolicyAC5B918E",
    "Roles": [
     {
      "Ref": "backendpipelineDeployDeploytoDevCodePipelineActionRoleAD541078"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/backend-pipeline/Deploy/DeploytoDev/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "accountid2AE3F05F": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Ref": "AWS::AccountId"
    },
    "Name": "/dev/account-id"
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/accountid/Resource"
   }
  },
  "region0C91FFCE": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Ref": "AWS::Region"
    },
    "Name": "/dev/region"
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/region/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OwQ6CMBBEv4V7WUUTPwB/oMGDR1PKKgulS9oSQ0j/Xa0YOc3byWR2DnDawz5TT5/rps8N1bBcgtK9eFu3xR+hnHSPoVQeheYG64lMA4ukEQ1ZlI471EGc73bFKEgNsFRs8OMmlWxIzymUKKaqce34t6XEhq9Yt8x9FN4Pn12O7EMqpwYM6FL4d8QoKvQ8Of39uuEz24YCsY1CzqFluztCUUCRdZ4od5MNNCBUX30BFSzBDhABAAA="
   },
   "Metadata": {
    "aws:cdk:path": "cp-backend/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}